/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Home_package;

import WeatherWidget.*;
import Home_package.DisplayTrayIcon;
import Home_package.history;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import com.teknikindustries.yahooweather.WeatherDisplay;
import com.teknikindustries.yahooweather.WeatherDoc;
import java.awt.Color;
import java.awt.TrayIcon;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import java.net.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;





public class CompleteHistory extends javax.swing.JFrame {
 
  int xMouse;
  int yMouse;
  
   
    public CompleteHistory() {
        initComponents();
        History();
    }
    public void History() 
    {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
           try
        {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection) 
                    DriverManager.getConnection("jdbc:mysql://localhost:3306/abd","root","root");
        Statement stmt = (Statement)con.createStatement();
        String time = "Select * from history order by date_time desc ;";
     
           ResultSet rs = stmt.executeQuery(time);
     while(rs.next())
        {String date = rs.getString("date_time");
        String his = rs.getString("name");
        model.addRow(new Object[]{date,his});
        }
     }
           
           catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
           
    
    }
    
    public void delete()
    { int index = jTable1.getSelectedRow();
    String date_time = (String) jTable1.getValueAt(index,0);
        try
        {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection) 
                    DriverManager.getConnection("jdbc:mysql://localhost:3306/abd","root","root");
        Statement stmt = (Statement)con.createStatement();
        String time = "Delete from history where date_time = '"+date_time+"';";
     
          stmt.executeUpdate(time);
          
   History();
     }
           
           catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    
    
    }
     public void deleteAll()
    { 
        try
        {
            Class.forName("java.sql.DriverManager");
            Connection con = (Connection) 
                    DriverManager.getConnection("jdbc:mysql://localhost:3306/abd","root","root");
        Statement stmt = (Statement)con.createStatement();
        String time = "Delete from history ;";
     
          stmt.executeUpdate(time);
   History();
     }
           
           catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    
    
    }
     
  
    
     
    
   
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Search = new javax.swing.JTextField();
        SearchHistory = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        history = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Date = new javax.swing.JLabel();
        deleteAll = new javax.swing.JLabel();
        Delete = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        degree1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(897, 558));
        setMinimumSize(new java.awt.Dimension(897, 558));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(897, 558));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        Search.setBackground(new java.awt.Color(0, 0, 0));
        Search.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Search.setForeground(new java.awt.Color(255, 255, 255));
        Search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Search.setText("Search");
        Search.setBorder(null);
        getContentPane().add(Search);
        Search.setBounds(20, 430, 160, 30);

        SearchHistory.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        SearchHistory.setForeground(new java.awt.Color(255, 255, 255));
        SearchHistory.setText("Search History");
        SearchHistory.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SearchHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchHistoryMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SearchHistoryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SearchHistoryMouseExited(evt);
            }
        });
        getContentPane().add(SearchHistory);
        SearchHistory.setBounds(200, 440, 100, 17);

        date.setFont(new java.awt.Font("Laserian", 1, 14)); // NOI18N
        date.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(date);
        date.setBounds(140, 130, 250, 30);

        jTable1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "  ", "  "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(24);
        jTable1.setSelectionBackground(new java.awt.Color(0, 158, 255));
        jTable1.setShowHorizontalLines(false);
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        history.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(222);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(222);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(222);
        }

        getContentPane().add(history);
        history.setBounds(20, 180, 720, 230);

        Date.setFont(new java.awt.Font("Laserian", 1, 12)); // NOI18N
        Date.setForeground(new java.awt.Color(255, 255, 102));
        Date.setText("DATE :");
        getContentPane().add(Date);
        Date.setBounds(30, 130, 100, 30);

        deleteAll.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        deleteAll.setForeground(new java.awt.Color(255, 255, 255));
        deleteAll.setText("Delete All");
        deleteAll.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteAllMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteAllMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteAllMouseExited(evt);
            }
        });
        getContentPane().add(deleteAll);
        deleteAll.setBounds(420, 530, 62, 17);

        Delete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Delete.setForeground(new java.awt.Color(255, 255, 255));
        Delete.setText("Delete");
        Delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                DeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                DeleteMouseExited(evt);
            }
        });
        getContentPane().add(Delete);
        Delete.setBounds(360, 530, 40, 17);

        jLabel4.setFont(new java.awt.Font("Laserian", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("HISTORY");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(240, 70, 160, 30);
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 60, 430, 50);

        degree1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        degree1.setForeground(new java.awt.Color(255, 255, 255));
        degree1.setText("X");
        degree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                degree1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                degree1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                degree1MouseExited(evt);
            }
        });
        getContentPane().add(degree1);
        degree1.setBounds(870, 0, 20, 40);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-10, 0, 520, 30);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(500, 0, 400, 30);

        background.setFont(new java.awt.Font("DS-Digital", 0, 12)); // NOI18N
        background.setForeground(new java.awt.Color(0, 168, 255));
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Home_package/Dragon-Art-Blue-Light-Luster-Black-Bckground-Design-Shine-WallpapersByte-com-1366x768.jpg"))); // NOI18N
        background.setText("testing");
        background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        background.setMaximumSize(new java.awt.Dimension(980, 511));
        background.setMinimumSize(new java.awt.Dimension(980, 511));
        background.setPreferredSize(new java.awt.Dimension(980, 511));
        background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backgroundMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backgroundMousePressed(evt);
            }
        });
        background.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                backgroundMouseDragged(evt);
            }
        });
        getContentPane().add(background);
        background.setBounds(-200, 21, 1120, 540);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
  
  

   
    }//GEN-LAST:event_formWindowOpened

    private void backgroundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMouseEntered
      
    }//GEN-LAST:event_backgroundMouseEntered

    private void backgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMousePressed
    xMouse = evt.getX();
    yMouse = evt.getY();
    }//GEN-LAST:event_backgroundMousePressed

    private void backgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMouseDragged
   int x = evt.getXOnScreen();
   int y = evt.getYOnScreen();
   
   this.setLocation(x- xMouse, y - yMouse);
    }//GEN-LAST:event_backgroundMouseDragged

    private void degree1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_degree1MouseEntered
             degree1.setForeground(Color.red);
    }//GEN-LAST:event_degree1MouseEntered

    private void degree1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_degree1MouseExited
             degree1.setForeground(Color.WHITE);
    }//GEN-LAST:event_degree1MouseExited

    private void degree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_degree1MouseClicked
              this.hide();
    }//GEN-LAST:event_degree1MouseClicked

    private void DeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteMouseClicked
delete();
    }//GEN-LAST:event_DeleteMouseClicked

    private void DeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteMouseEntered
        Delete.setForeground(Color.DARK_GRAY);
    }//GEN-LAST:event_DeleteMouseEntered

    private void DeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteMouseExited
        Delete.setForeground(Color.WHITE);
    }//GEN-LAST:event_DeleteMouseExited

    private void deleteAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteAllMouseClicked
deleteAll();
    }//GEN-LAST:event_deleteAllMouseClicked

    private void deleteAllMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteAllMouseEntered
        deleteAll.setForeground(Color.DARK_GRAY);
    }//GEN-LAST:event_deleteAllMouseEntered

    private void deleteAllMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteAllMouseExited
        deleteAll.setForeground(Color.WHITE);
    }//GEN-LAST:event_deleteAllMouseExited

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
if(evt.getKeyCode() == KeyEvent.VK_DELETE)      
{
delete();
}
    }//GEN-LAST:event_jTable1KeyPressed

    private void SearchHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchHistoryMouseClicked

    }//GEN-LAST:event_SearchHistoryMouseClicked

    private void SearchHistoryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchHistoryMouseEntered
        SearchHistory.setForeground(Color.DARK_GRAY);
    }//GEN-LAST:event_SearchHistoryMouseEntered

    private void SearchHistoryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchHistoryMouseExited
        SearchHistory.setForeground(Color.WHITE);
    }//GEN-LAST:event_SearchHistoryMouseExited

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       int index = jTable1.getSelectedRow();
       String date_time = (String) jTable1.getValueAt(index, 0);
      date.setText(date_time.substring(0,10));
    }//GEN-LAST:event_jTable1MouseClicked
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompleteHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompleteHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompleteHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompleteHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompleteHistory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Date;
    private javax.swing.JLabel Delete;
    private javax.swing.JTextField Search;
    private javax.swing.JLabel SearchHistory;
    private javax.swing.JLabel background;
    private javax.swing.JLabel date;
    private javax.swing.JLabel degree1;
    private javax.swing.JLabel deleteAll;
    private javax.swing.JScrollPane history;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
