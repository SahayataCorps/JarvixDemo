/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package WeatherWidget;

import Home_package.DisplayTrayIcon;
import Home_package.history;
import com.teknikindustries.yahooweather.WeatherDisplay;
import com.teknikindustries.yahooweather.WeatherDoc;
import java.awt.Color;
import java.awt.TrayIcon;
import javax.swing.ImageIcon;
import java.net.*;
import javax.swing.JOptionPane;





public class WeatherReport extends javax.swing.JFrame {
 
  int xMouse;
  int yMouse;
   history obj = new history("Weather");
   setIcon ii = new setIcon("2291535");
   DisplayTrayIcon dwt = new DisplayTrayIcon();
   
    public WeatherReport() {
        initComponents();
      
       
     
  
     networkChecking(); 
     
    }
    public void networkChecking()
    { Socket soc = new Socket();
InetSocketAddress add = new InetSocketAddress("www.google.com",80);
try
{soc.connect(add,3000);
 ii.Icon(icon);
    ImageIcon gif = new ImageIcon(getClass().getResource( ii.icIm+ ".png"));
    icon.setIcon(gif);
getWeather();
DisplayTrayIcon .trayIcon.displayMessage("CONNECTED", "Default City Sanganer", TrayIcon.MessageType.INFO);
        
}
catch(Exception e)
{DisplayTrayIcon .trayIcon.displayMessage("ERROR", "No Internet Connection", TrayIcon.MessageType.ERROR);
this.hide();
}
finally{
    try{soc.close();
    }
    catch(Exception e)
    {
    }
    
  }
    
    }
    
    
    
    
 public void getWeather()
 {
     WeatherDoc doc = new WeatherDoc("2291535","c");
   WeatherDisplay disp = new WeatherDisplay();
   condition.setText(disp.getCondition());
   temp.setText(disp.getTemperature());
   sunrise.setText(sunrise.getText()+" "+disp.getSunrise());
   sunset.setText(sunset.getText()+" "+disp.getSunset());
   chill.setText(chill.getText()+" "+disp.getWindChill());
   direction.setText(direction.getText()+" "+disp.getWindDirection() + " " + disp.getDistanceUnit());
   speed.setText(speed.getText()+ " " + disp.getWindSpeed()+" "+disp.getSpeedUnit() );
   humidity.setText(humidity.getText()+ " " + disp.getHumidity());
   visibilty.setText(visibilty.getText()+ " " + disp.getVisibility() + " " + disp.getDistanceUnit());
   pressure.setText(pressure.getText()+ " " + disp.getPressure() + " " + disp.getPressureUnit());
 }
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        condition = new javax.swing.JLabel();
        icon = new javax.swing.JLabel();
        degree1 = new javax.swing.JLabel();
        degree = new javax.swing.JLabel();
        temp = new javax.swing.JLabel();
        atmosphere = new javax.swing.JLabel();
        wind = new javax.swing.JLabel();
        humidity = new javax.swing.JLabel();
        visibilty = new javax.swing.JLabel();
        pressure = new javax.swing.JLabel();
        speed = new javax.swing.JLabel();
        direction = new javax.swing.JLabel();
        chill = new javax.swing.JLabel();
        sunset = new javax.swing.JLabel();
        sunrise = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(897, 511));
        setMinimumSize(new java.awt.Dimension(897, 511));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(897, 511));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        condition.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        condition.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(condition);
        condition.setBounds(130, 210, 160, 50);
        getContentPane().add(icon);
        icon.setBounds(30, 70, 160, 190);

        degree1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        degree1.setForeground(new java.awt.Color(255, 255, 255));
        degree1.setText("X");
        degree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                degree1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                degree1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                degree1MouseExited(evt);
            }
        });
        getContentPane().add(degree1);
        degree1.setBounds(870, 0, 20, 40);

        degree.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        degree.setForeground(new java.awt.Color(255, 255, 255));
        degree.setText("ยบ");
        getContentPane().add(degree);
        degree.setBounds(100, 230, 60, 90);

        temp.setFont(new java.awt.Font("Times New Roman", 0, 48)); // NOI18N
        temp.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(temp);
        temp.setBounds(50, 230, 60, 90);

        atmosphere.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        atmosphere.setForeground(new java.awt.Color(255, 255, 255));
        atmosphere.setText("ATMOSPHERE");
        getContentPane().add(atmosphere);
        atmosphere.setBounds(320, 360, 130, 30);

        wind.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        wind.setForeground(new java.awt.Color(255, 255, 255));
        wind.setText("WIND");
        getContentPane().add(wind);
        wind.setBounds(50, 360, 90, 30);

        humidity.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        humidity.setForeground(new java.awt.Color(255, 255, 255));
        humidity.setText("Humidity:");
        getContentPane().add(humidity);
        humidity.setBounds(320, 400, 120, 30);

        visibilty.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        visibilty.setForeground(new java.awt.Color(255, 255, 255));
        visibilty.setText("Visibilty:");
        getContentPane().add(visibilty);
        visibilty.setBounds(320, 425, 130, 30);

        pressure.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        pressure.setForeground(new java.awt.Color(255, 255, 255));
        pressure.setText("Pressure:");
        getContentPane().add(pressure);
        pressure.setBounds(320, 450, 160, 30);

        speed.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        speed.setForeground(new java.awt.Color(255, 255, 255));
        speed.setText("Speed:");
        getContentPane().add(speed);
        speed.setBounds(50, 450, 150, 30);

        direction.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        direction.setForeground(new java.awt.Color(255, 255, 255));
        direction.setText(" Direction:");
        getContentPane().add(direction);
        direction.setBounds(48, 425, 150, 30);

        chill.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        chill.setForeground(new java.awt.Color(255, 255, 255));
        chill.setText("Chill:");
        getContentPane().add(chill);
        chill.setBounds(50, 400, 150, 30);

        sunset.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sunset.setForeground(new java.awt.Color(255, 255, 255));
        sunset.setText("Sunset:");
        getContentPane().add(sunset);
        sunset.setBounds(50, 320, 130, 30);

        sunrise.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        sunrise.setForeground(new java.awt.Color(255, 255, 255));
        sunrise.setText("Sunrise: ");
        getContentPane().add(sunrise);
        sunrise.setBounds(50, 300, 130, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/WeatherWidget/top.png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-10, 0, 520, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/WeatherWidget/top.png"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(500, 0, 400, 30);

        background.setFont(new java.awt.Font("DS-Digital", 0, 12)); // NOI18N
        background.setForeground(new java.awt.Color(0, 168, 255));
        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/WeatherWidget/night-sky-stars.jpg"))); // NOI18N
        background.setText("testing");
        background.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        background.setMaximumSize(new java.awt.Dimension(980, 511));
        background.setMinimumSize(new java.awt.Dimension(980, 511));
        background.setPreferredSize(new java.awt.Dimension(980, 511));
        background.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backgroundMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                backgroundMousePressed(evt);
            }
        });
        background.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                backgroundMouseDragged(evt);
            }
        });
        getContentPane().add(background);
        background.setBounds(0, 0, 900, 511);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
  
  
   obj.addHistory();
  
   
    }//GEN-LAST:event_formWindowOpened

    private void backgroundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMouseEntered
      
    }//GEN-LAST:event_backgroundMouseEntered

    private void backgroundMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMousePressed
    xMouse = evt.getX();
    yMouse = evt.getY();
    }//GEN-LAST:event_backgroundMousePressed

    private void backgroundMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backgroundMouseDragged
   int x = evt.getXOnScreen();
   int y = evt.getYOnScreen();
   
   this.setLocation(x- xMouse, y - yMouse);
    }//GEN-LAST:event_backgroundMouseDragged

    private void degree1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_degree1MouseEntered
             degree1.setForeground(Color.red);
    }//GEN-LAST:event_degree1MouseEntered

    private void degree1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_degree1MouseExited
             degree1.setForeground(Color.WHITE);
    }//GEN-LAST:event_degree1MouseExited

    private void degree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_degree1MouseClicked
              this.hide();
    }//GEN-LAST:event_degree1MouseClicked
 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WeatherReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WeatherReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WeatherReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WeatherReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WeatherReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel atmosphere;
    private javax.swing.JLabel background;
    private javax.swing.JLabel chill;
    private javax.swing.JLabel condition;
    private javax.swing.JLabel degree;
    private javax.swing.JLabel degree1;
    private javax.swing.JLabel direction;
    private javax.swing.JLabel humidity;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel pressure;
    private javax.swing.JLabel speed;
    private javax.swing.JLabel sunrise;
    private javax.swing.JLabel sunset;
    private javax.swing.JLabel temp;
    private javax.swing.JLabel visibilty;
    private javax.swing.JLabel wind;
    // End of variables declaration//GEN-END:variables
}
